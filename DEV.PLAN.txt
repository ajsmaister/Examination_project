
DEVELOPMENT PLAN:
--------------------------------------------------------------------------------------------
TASK1:

--> DONE 1. Get {data} folder path and {.csv} files paths.

                        - parameters.py
                                > def data_path
                                > add POSTGRES_KEY

--> DONE 2. Read the {.csv} files ONLY !

                        - class FileHandler
                                > def file_inspector
                                > def get_csv_data (@staticmethod)
                                > def get_columns_name_from_csv (@staticmethod)
                                > def get_rows_from_csv (@staticmethod)

--> DONE 3. Inspect and repair the data columns if it neccessary;

                        - class CreationRules
                                > def columns_name_validator (@staticmethod)

--> DONE 4. Create dinamically CREATE TABLE statements query with determinated PRIMARY KEY and FOREIGN KEYS...
            check and transform the data types of the rows!!!!

                        - class CreationRules
                                > def create_statement

--> DONE 5. Create Postgres INSERT statements;

                        - class CreationRules
                                > def insert_statement

         6. Create {sql_handler.py} file;

                        - class PostgresHandler
                                > def execute_create
                                > def execute_insert
                                > def execute_insert_new_employees

--> DONE 7. create {app_manager.py} file;

         MANAGE THE FLOW ...

--> DONE 8. Run CREATE TABLE query...
--> DONE 9. Run ISERT INTO query... (load the data into the tables);

--------------------------------------------------------------------------------------------
TASK 2:

--> DONE 10. Determinate the SELECT queries, based on requirements and options of :

                        - PRIMARY KEYs
                        - FOREGIN KEY REFERENCES

--> DONE 11. Create {new_insertion.py} with new insertion TEST data...
--> DONE 11. Create {nselects.py} with the neccessary SELECT statement...
--> DONE 13. Run SELECT query by order...

                         - class PostgresHandler
                                > def execute_query_on_db

--------------------------------------------------------------------------------------------
TASK 3:

--> DONE 13. Create {calculate.py} file in order to accomplishts the requirements...

--------------------------------------------------------------------------------------------
TASK 4:

--> DONE 14. Create {statistic.json}
                        - class FileHandler
                                > def write:json (create folder, and files)

===========================================================================================
Completed...

